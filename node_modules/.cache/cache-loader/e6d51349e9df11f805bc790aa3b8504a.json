{"remainingRequest":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/docs/cli-example.md","dependencies":[{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/docs/cli-example.md","mtime":1621027634000},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-cli-example-md-361.json","mtime":1621249958320},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/cache-loader/dist/cjs.js","mtime":1621249873000},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/babel-loader/lib/index.js","mtime":1621227873640},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1621249887700},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1621249885860}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/docs/cli-example.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","value","children","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'cli-example',\n\ttitle: 'Using Zeitgeist markets (CLI)'\n};\nexport const metadata = {\n  \"unversionedId\": \"cli-example\",\n  \"id\": \"cli-example\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Using Zeitgeist markets (CLI)\",\n  \"description\": \"Setup\",\n  \"source\": \"@site/docs/cli-example.md\",\n  \"slug\": \"/cli-example\",\n  \"permalink\": \"/cli-example\",\n  \"editUrl\": \"https://github.com/zeitgeistpm/docs/edit/main/docs/cli-example.md\",\n  \"version\": \"current\"\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const rightToc = [{\n  value: 'Setup',\n  id: 'setup',\n  children: []\n}, {\n  value: 'As a user of an existing market',\n  id: 'as-a-user-of-an-existing-market',\n  children: []\n}, {\n  value: 'To create a market',\n  id: 'to-create-a-market',\n  children: []\n}, {\n  value: 'As a liquidity provider',\n  id: 'as-a-liquidity-provider',\n  children: []\n}];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h3 {...{\n      \"id\": \"setup\"\n    }}>{`Setup`}</h3>\n    <p>{`This page will describe some CLI commands to access a Zeitgeist chain. You can\neither run a Zeitgeist chain instance locally for testing purposes or interact\nwith the live chain. By default, the local chain endows the well-known account\n`}<inlineCode parentName=\"p\">{`//Alice`}</inlineCode>{` with test ZTG and you don't need to do anything to fund this account\nor obtain the private seed. On the live chain, we will assume that you have the\nprivate seed to an account which is funded with sufficient ZBP (or ZTG) as\nappropriate for the chain. You will need over 100 ZTG or equivalent on the chain\nyou are using if you want to interact with a market you have created.`}</p>\n    <p>{`If you are using a local chain instance, follow the instructions to install and\nstart the chain in the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/zeitgeistpm/zeitgeist\"\n      }}>{`zeitgeistpm/zeitgeist repo`}</a>{`.\nCompilation may take around 30-60 minutes.`}</p>\n    <p>{`In order to use the CLI, clone the\n`}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/zeitgeistpm/tools\"\n      }}>{`zeitgeistpm/tools repo`}</a>{` and install using\n`}<inlineCode parentName=\"p\">{`yarn`}</inlineCode>{`. installation using `}<inlineCode parentName=\"p\">{`npm`}</inlineCode>{` may not be complete.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`git clone https://github.com/zeitgeistpm/tools.git\ncd tools\nyarn\n`}</code></pre>\n    <p>{`We will set up a bash alias and refer to it in this doc. You can set up your own\nalias, or run the command directly, with `}<inlineCode parentName=\"p\">{`yarn cli`}</inlineCode>{` or through a GUI, as you\nprefer.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`alias zgcli=\"node $PWD/packages/cli/dist/index.js \"\n`}</code></pre>\n    <p>{`You can test that you have setup the CLI correctly with `}<inlineCode parentName=\"p\">{`zgcli help`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`yarn cli help`}</inlineCode>{`.`}</p>\n    <h3 {...{\n      \"id\": \"as-a-user-of-an-existing-market\"\n    }}>{`As a user of an existing market`}</h3>\n    <p>{`Find a market thatyou wish to interact with. You will need a market whose\n`}<inlineCode parentName=\"p\">{`marketStatus`}</inlineCode>{` is `}<inlineCode parentName=\"p\">{`\"Approved\"`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` zgcli getAllMarkets -f marketStatus marketType\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"to-create-a-market\"\n    }}>{`To create a market`}</h3>\n    <p>{`Anyone can create a prediction market using Zeitgeist!`}</p>\n    <p>{`A market could be `}<em parentName=\"p\">{`categorical`}</em>{`, `}<em parentName=\"p\">{`scalar`}</em>{` or `}<em parentName=\"p\">{`combinatorial`}</em>{`. These are\ndifferent types of market and refer to the available outcomes and how the\nmarkets are evntually resolved (or how outcome shares redeemed).`}</p>\n    <p>{`Currently, to create a market, you must either`}</p>\n    <ul>\n      <li parentName=\"ul\">{`leave a `}<inlineCode parentName=\"li\">{`ValidityBond`}</inlineCode>{` (larger) deposit, or`}</li>\n      <li parentName=\"ul\">{`leave a `}<inlineCode parentName=\"li\">{`AdvisoryBond`}</inlineCode>{` (smaller) deposit and, after creating the market, wait\nfor it to be approved - this is to prevent spam and incomplete markets`}</li>\n    </ul>\n    <p>{`Before the market is approved, the market will still show all its information\non-chain, but it will not be possible to add liquidity and therefore the\noutcomes cannot be traded.`}</p>\n    <h5 {...{\n      \"id\": \"to-create-a-market-on-a-live-zeitgeist-network\"\n    }}>{`To create a market on a live Zeitgeist network:`}</h5>\n    <pre><code parentName=\"pre\" {...{}}>{` zgcli createMarket \"Zeitgeist a hit?\" \"Will Zeitgeist be a hit?\" 5HBjqZByJz36LPpod2p5ZbeM84yUywj2U1EP9WjZwDp7S4pk 125000 --seed \"correct battery hore staple\"\n\n`}</code></pre>\n    <p><inlineCode parentName=\"p\">{`\"Zeitgeist a hit?\"`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`\"Will Zeitgeist be a hit?\"`}</inlineCode>{` are the `}<em parentName=\"p\">{`title`}</em>{` and\n`}<em parentName=\"p\">{`description`}</em>{` of the market you want to create. `}<inlineCode parentName=\"p\">{`5HBjqZByJ...`}</inlineCode>{` is the Account\nwho will act as the orcale to resolve the market. If you are just testing out\nthe functionality, you could set this to be your own account. `}<inlineCode parentName=\"p\">{`125000`}</inlineCode>{` is the\nblock number at which the market expires. You can also choose to add\n`}<inlineCode parentName=\"p\">{` --no-advised`}</inlineCode>{` if you want to create a Permissionless market `}<inlineCode parentName=\"p\">{`--seed`}</inlineCode>{` is an\noptional paramter, but will be necessary in order to interact with the live\nchain, as you will need to run extrinsics from a funded account.`}</p>\n    <h5 {...{\n      \"id\": \"to-create-a-market-on-a-live-zeitgeist-network-1\"\n    }}>{`To create a market on a live Zeitgeist network:`}</h5>\n    <p>{`We could create the same market on a local testnet, by specifying an endpoint`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{` zgcli createMarket \"Zeitgeist a hit?\" \"Will Zeitgeist be a hit?\" 5HBjqZByJz36LPpod2p5ZbeM84yUywj2U1EP9WjZwDp7S4pk 125000 --endpoint ws://localhost:9944\n`}</code></pre>\n    <p>{`We didn't specify a seed here - we could have done, but the CLI will use the\nprivate seed for `}<inlineCode parentName=\"p\">{`//Alice`}</inlineCode>{` by default and, on the local chain instance, this\naccount in endowed with a balance by default. Make a note of the `}<inlineCode parentName=\"p\">{`marketId`}</inlineCode>{` if\ncreation of the market was successful. (Here we'll use `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`).`}</p>\n    <p>{`As well as being funded, the `}<inlineCode parentName=\"p\">{`//Alice`}</inlineCode>{` account has sudo permissions on the local\ninstance, so we can approve our own market! :`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`zgcli approve 0 --endpoint ws://localhost:9944\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"as-a-liquidity-provider\"\n    }}>{`As a liquidity provider`}</h3>\n    <p>{`Here we're using the example of the account created on the local chain and\napproved by `}<inlineCode parentName=\"p\">{`//Alice`}</inlineCode>{`. `}<inlineCode parentName=\"p\">{`10000000000`}</inlineCode>{` correponds to 1 ZTG, so when we\n`}<inlineCode parentName=\"p\">{`buyCompleteSet`}</inlineCode>{`, we are buying 300 ZTG-equivalent sets of outcomes. In the case\nof this market, where we used the defaults, this means that we created a\n`}<inlineCode parentName=\"p\">{`Yes`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`No`}</inlineCode>{`categorical market and so when we spend 300 ZTG, we receive both 300\n`}<inlineCode parentName=\"p\">{`Yes`}</inlineCode>{` outcome tokens `}<em parentName=\"p\">{`and`}</em>{` 300 `}<inlineCode parentName=\"p\">{`No`}</inlineCode>{` outcome tokens. We can then use `}<inlineCode parentName=\"p\">{`deployPool`}</inlineCode>{`\nto be the first to deploy a liquidity pool for market `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{`. (The current,\ntemporary, default amount to deploy to a pool is 100 ZTG equivalent of outcome\ntokens, `}<em parentName=\"p\">{`plus`}</em>{` 100 ZTG - These amounts will be configurable, but are currently\nset to 100 ZTG as this is the minimum allowed to deploy to a liquidity pool)`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`zgcli buyCompleteSet 0 3000000000000 --endpoint ws://localhost:9944\nzgcli deployPool 0 --endpoint ws://localhost:9944\n`}</code></pre>\n    <p>{`Make a note of the `}<inlineCode parentName=\"p\">{`PoolId`}</inlineCode>{` if deploying the pool was successful. (Here we'll\nuse `}<inlineCode parentName=\"p\">{`0`}</inlineCode>{` again but be aware: `}<inlineCode parentName=\"p\">{`marketId`}</inlineCode>{`s and `}<inlineCode parentName=\"p\">{`PoolId`}</inlineCode>{`s are not interchangeable).\nNote that, now the pool is deployed, it cannot be deployed again. Other\nparticipants must instead `}<em parentName=\"p\">{`join`}</em>{` the existing pool using `}<inlineCode parentName=\"p\">{`joinPool`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}