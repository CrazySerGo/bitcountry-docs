{"remainingRequest":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/docs/using-zeitgeist-markets.md","dependencies":[{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/docs/using-zeitgeist-markets.md","mtime":1621027634000},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-using-zeitgeist-markets-md-906.json","mtime":1621249958320},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/cache-loader/dist/cjs.js","mtime":1621249873000},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/babel-loader/lib/index.js","mtime":1621227873640},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1621249887700},{"path":"/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1621249885860}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Volumes/Samsung_T5/Projects/BitCountry-Docs/bitcountry-docs/docs/using-zeitgeist-markets.md"],"names":["React","mdx","frontMatter","id","title","metadata","rightToc","layoutProps","MDXLayout","MDXContent","components","props","isMDXComponent"],"mappings":"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","sourcesContent":["\n  import React from 'react';\n  import { mdx } from '@mdx-js/react';\n\n  export const frontMatter = {\n\tid: 'using-zeitgeist-markets',\n\ttitle: 'Using Zeitgeist markets'\n};\nexport const metadata = {\n  \"unversionedId\": \"using-zeitgeist-markets\",\n  \"id\": \"using-zeitgeist-markets\",\n  \"isDocsHomePage\": false,\n  \"title\": \"Using Zeitgeist markets\",\n  \"description\": \"In order for prediction markets to be liquid, we need to be able to exchange\",\n  \"source\": \"@site/docs/using-zeitgeist-markets.md\",\n  \"slug\": \"/using-zeitgeist-markets\",\n  \"permalink\": \"/using-zeitgeist-markets\",\n  \"editUrl\": \"https://github.com/zeitgeistpm/docs/edit/main/docs/using-zeitgeist-markets.md\",\n  \"version\": \"current\",\n  \"sidebar\": \"someSidebar\",\n  \"previous\": {\n    \"title\": \"Prediction Markets\",\n    \"permalink\": \"/prediction-markets\"\n  },\n  \"next\": {\n    \"title\": \"Governance\",\n    \"permalink\": \"/governance\"\n  }\n};\n  /* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const rightToc = [];\n\nconst layoutProps = {\n  rightToc\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <p>{`In order for prediction markets to be liquid, we need to be able to exchange\nassets.`}</p>\n    <h4 {...{\n      \"id\": \"assets\"\n    }}>{`Assets`}</h4>\n    <p>{`An asset in Zeitgeist could be:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`units of the ZTG token (on the Battery Park testnet, this token is known as\nZBP - but in SDK and CLI commands, and in this page, both ZTG and ZBP are\ncalled ZTG)`}</li>\n      <li parentName=\"ul\">{`An outcome asset, representing 1 ZTG only `}<em parentName=\"li\">{`once`}</em>{` the market has finalised and\n`}<em parentName=\"li\">{`if`}</em>{` the corresponding outcome is what the market resolved to.`}</li>\n      <li parentName=\"ul\">{`A liquidity share, representing a proportion of the liquidity remaining in a\npool (available pools and available markets will usually correspond 1:1). When\nthe share is created, it will be equivalent to 1 ZTG, but this value will\nfluctuate.`}</li>\n    </ul>\n    <h4 {...{\n      \"id\": \"outcome-assets\"\n    }}>{`Outcome Assets`}</h4>\n    <p>{`Markets will have a finite number of outcome assets, which are determined when\nthe market is created.`}</p>\n    <h6 {...{\n      \"id\": \"discrete-categorical-and-combinatorial-markets\"\n    }}>{`Discrete (categorical and combinatorial) Markets`}</h6>\n    <p>{`For categorical and combinatorial markets, the possible outcome assets\ncorrespond 1:1 to the possible outcomes which the market may resolve to. When\nthe market resolves, one of the outcome assets will be redeemable for 1 ZTG per\ntoken, and the others wil lose their value.`}</p>\n    <h6 {...{\n      \"id\": \"scalar-markets\"\n    }}>{`Scalar Markets`}</h6>\n    <p>{`For scalar markets, the outcome assets are known as `}<inlineCode parentName=\"p\">{`Long`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Short`}</inlineCode>{`, though\nthe outcome that the market will eventually resolve to will be a number. In\nscalar markets, instead of the categories (eg `}<inlineCode parentName=\"p\">{`Yes'/'No`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Under`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`Over`}</inlineCode>{` or\n`}<inlineCode parentName=\"p\">{`Barcelona`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`Madrid`}</inlineCode>{`), the continuous outcome `}<em parentName=\"p\">{`range`}</em>{` is set at market creation,\ndefined by an upper and lower numerical bound. The outcome range specified by\nthese bounds does `}<em parentName=\"p\">{`not`}</em>{` necessarily cover all possible outcomes. While it is\nunlikely that the scalar market will likely resolve exactly to one of the\nbounds, the eventual resolved outcome would usually be within the range, but may\ninstead be below or above it. In that case, one of the `}<inlineCode parentName=\"p\">{`Long`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Short`}</inlineCode>{`\noutcome assets would be redeemable to 1 ZTG (and the other would have no value)\nbut in the more usual case when a scalar market resolves to a number within the\noutcome range, both `}<inlineCode parentName=\"p\">{`Long`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`Short`}</inlineCode>{` outcome assets will be redeemable at\nbetween 0 and 1 ZTG, proportional to where the resolved outcome lies along the\nrange (and totalling 1 ZTG).`}</p>\n    <h6 {...{\n      \"id\": \"purchasing-outcome-assets\"\n    }}>{`Purchasing outcome assets`}</h6>\n    <p>{`All assets are swappable for all other assets, though the usual means of\nswapping would be (ZTG <-> Outcome Asset Token/s), (Outcome Asset Token/s <->\nLiquidity Shares) or (Liquidity Shares -> ZTG) The simplest way to buy exposure\nto the outcome of a market is to go to the market's liquidity pool and `}<em parentName=\"p\">{`swap`}</em>{`\nyour ZTG for the relevant outcome asset. You should pay less than 1 ZTG per\noutcome asset token (though of course you can swap more or less than 1) and, if\nthe outcome is on a categorical market, if the market resolves in your favour,\nyou can redeem the token for 1 ZTG. If the market is scalar, or you wish to swap\nout before the market is resolved, you can redeem (for resolved scalar markets)\nor swap (for any market with liquidity) the outcome token for between 0 and 1\nZTG.`}</p>\n    <h4 {...{\n      \"id\": \"liquidity-shares-and-liquidity-pools\"\n    }}>{`Liquidity Shares and Liquidity Pools`}</h4>\n    <p>{`Markets can be created by anyone, and anyone owning outcome assets can redeem\nthem once the market has resolved. Other than these two examples, though, all\ntrading activity within Zeitgeist takes place within a `}<em parentName=\"p\">{`liquidity pool`}</em>{`.\nLocating the pool for a market should be transparent, as usually there will only\nbe one pool relevant to any given market. We call this the canonical pool, or\nmarket pool.`}</p>\n    <h6 {...{\n      \"id\": \"creating-a-markets-liquidity-pool\"\n    }}>{`Creating a market's liquidity pool`}</h6>\n    <p>{`Creating this pool is a separate step after market creation but pools will\nusually be created straight away by the market creator (but may instead or\nadditionally be created by any liquidity provider). To create the pool, a\nprovider (or market creator) must first mint a `}<em parentName=\"p\">{`complete set`}</em>{` of outcome assets\nfor a given market, not just those that they favour (the current minimum is 100\nZTG - which would mint 100 tokens of each of the market's outcome assets).\nMinting can be done by anyone and can be done more than once, but is the only\nway to create new outcome tokens, so that every outcome token which exists is\nbacked 1:`}<em parentName=\"p\">{`(n-1)`}</em>{` by tokens for the `}<em parentName=\"p\">{`(n-1)`}</em>{` other outcomes. So for each ZTG\nprovided, the complete set the liquidity provider receives in exchange consists\nof equal amounts of tokens of each outcome in the market. The value of any\ncomplete set of `}<em parentName=\"p\">{`x`}</em>{` tokens will always remain equal to `}<em parentName=\"p\">{`x`}</em>{` ZTG, as a complete\nset will always be directly redeemable for `}<em parentName=\"p\">{`x`}</em>{` ZTG.`}</p>\n    <h6 {...{\n      \"id\": \"funding-a-markets-liquidity-pool\"\n    }}>{`Funding a market's liquidity pool`}</h6>\n    <p>{`When deploying liquidity into a pool, a liquidity provider will usually provide\n`}<em parentName=\"p\">{`a complete set, plus ZTG`}</em>{`, so that calling the `}<inlineCode parentName=\"p\">{`poolJoin`}</inlineCode>{` function with an\namount of `}<inlineCode parentName=\"p\">{`100`}</inlineCode>{` will transfer in 100 of each outcome tokens, and 100 ZTG, making\na total value of 200 ZTG liquidity provided. They may alternatively provide\nliquidity in a single specific asset. We call this `}<em parentName=\"p\">{`joining`}</em>{` or `}<em parentName=\"p\">{`entering`}</em>{` the\npool, even if the liquidity provider already has assets in the pool. Once they\nhave transferred in assets, the liquidity providers no longer control those\nassets but will receive fees when others swap them with their own assets\n(usually ZTG). The liquidity providers receive fees from these swaps to\ncompensate for the risk they take, of being left holding the losing outcome\nassets. Until they are swapped, though, the original assets are still owned\nindirectly by the liquidity providers, as they remain in the pool and the pool\nis owned by the liquidity providers through `}<em parentName=\"p\">{`liquidity shares`}</em>{` (aka `}<em parentName=\"p\">{`liquidity\npool shares`}</em>{`). Liquidity shares are received by the liquidity providers when\nthey join the pool, in exchange for the assets they add. Since the market is\nliquid, the amount of shares a liquidity provider will receive cannot be exactly\ndetermined before the transaction is made. However, they can specify `}<inlineCode parentName=\"p\">{`bounds`}</inlineCode>{` on\nthe amount, either as a minimum of shares to receive for specified assets, or as\nthe maximum assets they will provide for a specified amount of shares.`}</p>\n    <h6 {...{\n      \"id\": \"canonical-pools-and-alternatives\"\n    }}>{`Canonical pools and alternatives`}</h6>\n    <p>{`It is possible for a liquidity provider to deploy their own pool, involving any\nkind of assets and not referenced by a specific market. The reason `}<em parentName=\"p\">{`not`}</em>{` to do\nthis is that they would then be taking the risk of providing liquidity, without\noptimally minimising that risk, as the total liquidity would be fragmented\nbetween different pools. When a pool has less liquidity, it is less liquid which\ntends to a lose-lose outcome for all involved. It is recommended, instead, only\nto use the market's `}<em parentName=\"p\">{`canonical pool`}</em>{`, which will be referenced by the market\nitself in its on-chain `}<inlineCode parentName=\"p\">{`marketData`}</inlineCode>{`. It is possible to add either varying\nweights of standard assets (the market's outcome assets and ZTG) or other\nindividual assets to any existing pool.`}</p>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "]}]}